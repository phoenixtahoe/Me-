{"ast":null,"code":"import _classCallCheck from \"/Users/phoenixdavid/Work/phoenix/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/phoenixdavid/Work/phoenix/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/phoenixdavid/Work/phoenix/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/phoenixdavid/Work/phoenix/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/phoenixdavid/Work/phoenix/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/phoenixdavid/Work/phoenix/src/components/test/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from \"react-router-dom\";\nimport Particles from 'react-particles-js';\nimport Snap from 'snapsvg-cjs';\n\nvar Test =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Test, _Component);\n\n  function Test() {\n    _classCallCheck(this, Test);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Test).apply(this, arguments));\n  }\n\n  _createClass(Test, [{\n    key: \"svgRender\",\n    value: function svgRender() {\n      var element = new Snap(this.svgDiv);\n      Snap.load(\"/TEST.svg\", function (data) {\n        if (element) {\n          var letterSpeed = 5; //higher = faster\n\n          var colorSpeed = 1; //higher = faster\n\n          var colors = ['#e9edef', '#efad42', '#e9435a', '#4aadad', '#83cead'];\n          var letters = Snap.selectAll('.letter');\n          var tl = new TimelineMax({\n            repeat: -1,\n            yoyo: true\n          });\n\n          for (var i = 0; i < letters.length; i += 1) {\n            if (window.CP.shouldStopExecution(0)) break;\n            var letter = letters[i];\n            tl.set(letter.node, {\n              rotation: 180 - Math.random() * 360,\n              x: 20,\n              y: -200\n            }, 0);\n            var tw = TweenMax.to(letter.node, 0.6, {\n              rotation: 0,\n              x: 0,\n              y: 0,\n              ease: Back.easeOut\n            });\n            tl.add(tw, 0.5 + i / letterSpeed);\n            var paths = letter.selectAll('*');\n\n            for (var k = 0; k < paths.length; k += 1) {\n              if (window.CP.shouldStopExecution(1)) break;\n\n              for (var j = 0; j < colors.length; j += 1) {\n                if (window.CP.shouldStopExecution(2)) break;\n                var l = paths[k].clone();\n                l.attr({\n                  stroke: colors[j]\n                });\n                var delay = 0.1 + i / letterSpeed + (colors.length - j / colorSpeed) / 10;\n                var tw = TweenMax.fromTo(l.node, 1, {\n                  drawSVG: '0%'\n                }, {\n                  drawSVG: '100%',\n                  ease: Power2.easeInOut\n                });\n                tl.add(tw, delay);\n              } //paths[k].remove();\n\n\n              window.CP.exitedLoop(2);\n              letter.prepend(paths[k]);\n              TweenMax.set(paths[k].node, {\n                x: -3,\n                y: -3\n              });\n              var tw = TweenMax.fromTo(paths[k].node, 1, {\n                drawSVG: '0%'\n              }, {\n                drawSVG: '100%',\n                ease: Power2.easeInOut\n              });\n              tl.add(tw, delay);\n            }\n\n            window.CP.exitedLoop(1);\n          }\n\n          window.CP.exitedLoop(0);\n          element.append(data);\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.svgRender();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.svgRender();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        ref: function ref(d) {\n          return _this.svgDiv = d;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Test;\n}(Component);\n\nexport { Test as default };","map":{"version":3,"sources":["/Users/phoenixdavid/Work/phoenix/src/components/test/index.js"],"names":["React","Component","ReactDOM","Link","Particles","Snap","Test","element","svgDiv","load","data","letterSpeed","colorSpeed","colors","letters","selectAll","tl","TimelineMax","repeat","yoyo","i","length","window","CP","shouldStopExecution","letter","set","node","rotation","Math","random","x","y","tw","TweenMax","to","ease","Back","easeOut","add","paths","k","j","l","clone","attr","stroke","delay","fromTo","drawSVG","Power2","easeInOut","exitedLoop","prepend","append","svgRender","d"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {Link} from \"react-router-dom\";\nimport Particles from 'react-particles-js';\nimport '../test.svg';\nimport Snap from 'snapsvg-cjs';\n\nexport default class Test extends Component {\n\n\t  svgRender() {\n\t    let element = new Snap(this.svgDiv)\n\t    Snap.load(\"/TEST.svg\", function(data){\n\t      if (element) {\n\t\t\t\t\tvar letterSpeed = 5; //higher = faster\n\t\t\t\t\tvar colorSpeed = 1; //higher = faster\n\t\t\t\t\tlet colors = [\n\t\t\t\t\t'#e9edef', '#efad42', '#e9435a', '#4aadad', '#83cead'];\n\n\t\t\t\t\tlet letters = Snap.selectAll('.letter');\n\t\t\t\t\tlet tl = new TimelineMax({\n\t\t\t\t\t  repeat: -1,\n\t\t\t\t\t  yoyo: true });\n\n\n\t\t\t\t\tfor (var i = 0; i < letters.length; i += 1) {if (window.CP.shouldStopExecution(0)) break;\n\t\t\t\t\t  var letter = letters[i];\n\n\t\t\t\t\t  tl.set(letter.node, {\n\t\t\t\t\t    rotation: 180 - Math.random() * 360,\n\t\t\t\t\t    x: 20,\n\t\t\t\t\t    y: -200 },\n\t\t\t\t\t  0);\n\n\t\t\t\t\t  var tw = TweenMax.to(letter.node, 0.6, {\n\t\t\t\t\t    rotation: 0,\n\t\t\t\t\t    x: 0,\n\t\t\t\t\t    y: 0,\n\t\t\t\t\t    ease: Back.easeOut });\n\n\n\t\t\t\t\t  tl.add(tw, 0.5 + i / letterSpeed);\n\n\t\t\t\t\t  var paths = letter.selectAll('*');\n\t\t\t\t\t  for (var k = 0; k < paths.length; k += 1) {if (window.CP.shouldStopExecution(1)) break;\n\t\t\t\t\t    for (var j = 0; j < colors.length; j += 1) {if (window.CP.shouldStopExecution(2)) break;\n\n\t\t\t\t\t      var l = paths[k].clone();\n\t\t\t\t\t      l.attr({\n\t\t\t\t\t        stroke: colors[j] });\n\n\n\t\t\t\t\t      var delay = 0.1 + i / letterSpeed + (colors.length - j / colorSpeed) / 10;\n\t\t\t\t\t      var tw = TweenMax.fromTo(l.node, 1, {\n\t\t\t\t\t        drawSVG: '0%' },\n\t\t\t\t\t      {\n\t\t\t\t\t        drawSVG: '100%',\n\t\t\t\t\t        ease: Power2.easeInOut });\n\n\t\t\t\t\t      tl.add(tw, delay);\n\n\t\t\t\t\t    }\n\n\t\t\t\t\t    //paths[k].remove();\n\t\t\t\t\t    window.CP.exitedLoop(2);letter.prepend(paths[k]);\n\t\t\t\t\t    TweenMax.set(paths[k].node, {\n\t\t\t\t\t      x: -3,\n\t\t\t\t\t      y: -3 });\n\n\t\t\t\t\t    var tw = TweenMax.fromTo(paths[k].node, 1, {\n\t\t\t\t\t      drawSVG: '0%' },\n\t\t\t\t\t    {\n\t\t\t\t\t      drawSVG: '100%',\n\t\t\t\t\t      ease: Power2.easeInOut });\n\n\t\t\t\t\t    tl.add(tw, delay);\n\n\t\t\t\t\t  }window.CP.exitedLoop(1);\n\n\t\t\t\t\t}window.CP.exitedLoop(0);\n\n\t        element.append(data);\n\t      }\n\t    });\n\t  }\n\t  componentDidMount() {\n\t    this.svgRender();\n\t  }\n\t  componentDidUpdate() {\n\t    this.svgRender();\n\t  }\n\t  render() {\n\t    return  <div ref={d=>this.svgDiv=d} />\n\t  }\n\t}\n"]},"metadata":{},"sourceType":"module"}